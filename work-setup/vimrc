execute pathogen#infect()
call plug#begin()
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }
Plug 'ctrlpvim/ctrlp.vim'
" Plug 'tarekbecker/vim-yaml-formatter'
" Plug 'dense-analysis/ale'
"Plug 'mrk21/yaml-vim'
call plug#end()
" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Yaml stuff
" filetype plugin indent on
" let g:syntastic_yaml_checkers = ['yamllint']
" au! BufRead,BufNewFile *.caml set filetype=yaml 
" au! BufRead,BufNewFile *.daml set filetype=yaml
" au! BufRead,BufNewFile *.yml set filetype=yaml
" autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab indentkeys-=<:>
" autocmd FileType yml setlocal ts=2 sts=2 sw=2 expandtab indentkeys-=<:>

" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*
" 
" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 1
" let g:syntastic_check_on_wq = 0




set t_Co=256
set nocompatible

"attempt to determine the file type
filetype indent plugin on

""syntax highlighting
if &t_Co > 2 || has("gui_running")
   syntax on
endif

"command-line completion
set wildmenu

"shows partial commands
set showcmd

"highlight searches
set hlsearch
set vi+=n

"case insensitive search
set ignorecase
set smartcase

set incsearch

"displays cursor position
set ruler
" set laststatus=2

"dialogue save changed instead of failing
set confirm

"display relative numbers
:highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE

"use spaces instead of tabs


"add these lines to your vimrc to configure syntastic & yamllint
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" Yaml stuff
filetype plugin indent on
let g:syntastic_yaml_checkers = ['yamllint']
au! BufRead,BufNewFile *.caml set filetype=yaml 
au! BufRead,BufNewFile *.daml set filetype=yaml
au! BufRead,BufNewFile *.yml set filetype=yaml
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab indentkeys-=<:>
autocmd FileType yml setlocal ts=2 sts=2 sw=2 expandtab indentkeys-=<:>
let g:syntastic_always_populate_loc_list = 1            " automatically load errors into the location list
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1                       " check for errors when a file is loaded

let g:syntastic_check_on_wq = 0
let g:syntastic_yaml_checkers = [ "yamllint" ]
let g:syntastic_quiet_messages = { "type": "style" }

command! TrimWhitespace call TrimWhitespace()
fun! TrimWhitespace()
    let l:save = winsaveview()
    keeppatterns %s/\s\+$//e
    call winrestview(l:save)
endfun
